#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
"""

import sys
import traceback

def test_import(module_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è."""
    try:
        __import__(module_name)
        print(f"‚úÖ {module_name} - OK")
        return True
    except Exception as e:
        print(f"‚ùå {module_name} - FAILED: {e}")
        traceback.print_exc()
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    modules_to_test = [
        "os",
        "asyncio", 
        "logging",
        "dotenv",
        "aiogram",
        "aiohttp",
        "src",
        "src.integrations",
        "src.integrations.yclients_adapter", 
        "src.realtime",
        "src.realtime.client",
        "src.realtime.events",
        "src.config",
        "src.config.env",
    ]
    
    failed_imports = []
    
    for module in modules_to_test:
        if not test_import(module):
            failed_imports.append(module)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {len(modules_to_test) - len(failed_imports)}")
    print(f"‚ùå –û—à–∏–±–∫–∏: {len(failed_imports)}")
    
    if failed_imports:
        print(f"\n‚ùå –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏: {failed_imports}")
        return 1
    else:
        print("\nüéâ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        return 0

if __name__ == "__main__":
    sys.exit(main())

#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–∞—á–µ–π –∏–∑ YClients API.
"""

import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ dental_bot
from dental_bot import YClientsIntegration

async def test_doctors_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–∞—á–µ–π —á–µ—Ä–µ–∑ YClients API."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–∞—á–µ–π –∏–∑ YClients API...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        required_vars = ['YCLIENTS_TOKEN', 'YCLIENTS_COMPANY_ID']
        missing_vars = [var for var in required_vars if not os.getenv(var)]
        
        if missing_vars:
            print(f" –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
            print("–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª .env:")
            for var in missing_vars:
                print(f"  {var}=your_value_here")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º YClients –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        yclients = YClientsIntegration()
        print("‚úÖ YClients –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π
        print("\nüìã –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π...")
        all_doctors = await yclients.get_doctors()
        
        if all_doctors.get('doctors'):
            print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(all_doctors['doctors'])} –≤—Ä–∞—á–µ–π:")
            for i, doctor in enumerate(all_doctors['doctors'], 1):
                print(f"  {i}. {doctor['name']} - {doctor['position']}")
                if 'description' in doctor:
                    print(f"     –û–ø–∏—Å–∞–Ω–∏–µ: {doctor['description'][:100]}...")
        else:
            print("‚ö†Ô∏è –í—Ä–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
            print(f"–û—Ç–≤–µ—Ç: {all_doctors}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ '—Ç–µ—Ä–∞–ø–µ–≤—Ç'...")
        filtered_doctors = await yclients.get_doctors("—Ç–µ—Ä–∞–ø–µ–≤—Ç")
        
        if filtered_doctors.get('doctors'):
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(filtered_doctors['doctors'])} —Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–≤:")
            for i, doctor in enumerate(filtered_doctors['doctors'], 1):
                print(f"  {i}. {doctor['name']} - {doctor['position']}")
        else:
            print("‚ö†Ô∏è –¢–µ—Ä–∞–ø–µ–≤—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print(f"–û—Ç–≤–µ—Ç: {filtered_doctors}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_doctors_api())

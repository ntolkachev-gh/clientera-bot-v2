#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–∞—á–µ–π.
"""

import asyncio
import time
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ dental_bot
from dental_bot import YClientsIntegration, doctors_cache

async def test_doctors_caching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–∞—á–µ–π...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º YClients –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        yclients = YClientsIntegration()
        print("‚úÖ YClients –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –û—á–∏—â–∞–µ–º –∫–µ—à –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
        yclients.clear_doctors_cache()
        print("üóëÔ∏è –ö–µ—à –æ—á–∏—â–µ–Ω")
        
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –≤ API
        print("\nüìã –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (–∏–∑ API)...")
        start_time = time.time()
        result1 = await yclients.get_doctors()
        end_time = time.time()
        
        if result1.get('doctors'):
            print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(result1['doctors'])} –≤—Ä–∞—á–µ–π –∑–∞ {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
            print("–ü–µ—Ä–≤—ã–µ 2 –≤—Ä–∞—á–∞:")
            for i, doctor in enumerate(result1['doctors'][:2], 1):
                print(f"  {i}. {doctor['name']} - {doctor['position']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞
        cache_stats = yclients.get_cache_stats()
        print(f"\nüíæ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞: {cache_stats}")
        
        # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –∏–∑ –∫–µ—à–∞
        print("\nüìã –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–∏–∑ –∫–µ—à–∞)...")
        start_time = time.time()
        result2 = await yclients.get_doctors()
        end_time = time.time()
        
        if result2.get('doctors'):
            print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(result2['doctors'])} –≤—Ä–∞—á–µ–π –∑–∞ {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
        if result1 == result2:
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã –¥–∞–Ω–Ω—ã–º –∏–∑ API")
        else:
            print(" –î–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ API")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
        start_time = time.time()
        filtered_result = await yclients.get_doctors("—Ç–µ—Ä–∞–ø–µ–≤—Ç")
        end_time = time.time()
        
        if filtered_result.get('doctors'):
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(filtered_result['doctors'])} —Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–≤ –∑–∞ {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
            for i, doctor in enumerate(filtered_result['doctors'], 1):
                print(f"  {i}. {doctor['name']} - {doctor['position']}")
                if 'specialization' in doctor:
                    print(f"     –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {doctor['specialization']}")
        else:
            print("‚ö†Ô∏è –¢–µ—Ä–∞–ø–µ–≤—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞
        final_cache_stats = yclients.get_cache_stats()
        print(f"\nüíæ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞: {final_cache_stats}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_doctors_caching())

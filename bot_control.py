#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –±–æ—Ç–æ–º.
"""

import sys
import subprocess
import os

def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É."""
    print("ü¶∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –±–æ—Ç–æ–º")
    print("=" * 40)
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python3 bot_control.py start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    print("  python3 bot_control.py stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")  
    print("  python3 bot_control.py restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    print("  python3 bot_control.py status  - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
    print("  python3 bot_control.py help    - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")

def check_bot_running():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç."""
    try:
        result = subprocess.run(
            ['ps', 'aux'], 
            capture_output=True, 
            text=True, 
            check=True
        )
        
        for line in result.stdout.split('\n'):
            if 'dental_bot.py' in line and 'grep' not in line and 'bot_control.py' not in line:
                return True
        return False
        
    except subprocess.CalledProcessError:
        return False

def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞...")
    
    if check_bot_running():
        print("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!")
        return False
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        subprocess.Popen(
            ['python3', 'dental_bot.py'],
            stdout=subprocess.DEVNULL,
            stderr=subprocess.DEVNULL,
            start_new_session=True
        )
        
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
        print("üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: tail -f /tmp/dental_bot.log")
        return True
        
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        return False

def stop_bot():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞."""
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    
    try:
        result = subprocess.run(['python3', 'stop_bot.py'], capture_output=True, text=True)
        print(result.stdout)
        if result.stderr:
            print(result.stderr)
        return result.returncode == 0
        
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞: {e}")
        return False

def restart_bot():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    if check_bot_running():
        print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä...")
        if not stop_bot():
            print(" –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")
            return False
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    return start_bot()

def show_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞."""
    print("üìä –°—Ç–∞—Ç—É—Å —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞:")
    print("=" * 40)
    
    if check_bot_running():
        print("üü¢ –°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        try:
            result = subprocess.run(['ps', 'aux'], capture_output=True, text=True, check=True)
            for line in result.stdout.split('\n'):
                if 'dental_bot.py' in line and 'grep' not in line and 'bot_control.py' not in line:
                    parts = line.split()
                    if len(parts) >= 2:
                        pid = parts[1]
                        cpu = parts[2]
                        mem = parts[3]
                        print(f"üìã PID: {pid}")
                        print(f"üíª CPU: {cpu}%")
                        print(f"üß† Memory: {mem}%")
                        break
        except:
            pass
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        lock_file = "/tmp/dental_bot.lock"
        if os.path.exists(lock_file):
            print(f"üîí –§–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {lock_file}")
        
    else:
        print("üî¥ –°—Ç–∞—Ç—É—Å: –û–°–¢–ê–ù–û–í–õ–ï–ù")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–±—ã—Ç—ã–π —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        lock_file = "/tmp/dental_bot.lock"
        if os.path.exists(lock_file):
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –∑–∞–±—ã—Ç—ã–π —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {lock_file}")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 stop_bot.py –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    if len(sys.argv) != 2:
        show_help()
        return
    
    command = sys.argv[1].lower()
    
    if command == 'start':
        start_bot()
    elif command == 'stop':
        stop_bot()
    elif command == 'restart':
        restart_bot()
    elif command == 'status':
        show_status()
    elif command in ['help', '--help', '-h']:
        show_help()
    else:
        print(f" –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        show_help()

if __name__ == "__main__":
    main()

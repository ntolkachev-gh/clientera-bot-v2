.PHONY: help install install-dev setup lint format type-check run-ptb run-aiogram clean test

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[0;33m
BLUE := \033[0;34m
PURPLE := \033[0;35m
CYAN := \033[0;36m
WHITE := \033[0;37m
RESET := \033[0m

# Python –∫–æ–º–∞–Ω–¥—ã
PYTHON := python3
# –ï—Å–ª–∏ Poetry –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π Python
POETRY := $(shell command -v poetry 2> /dev/null)
ifdef POETRY
    POETRY_RUN := $(POETRY) run
else
    POETRY_RUN := $(PYTHON)
endif

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(CYAN)ü§ñ Telegram Bot Local Development$(RESET)"
	@echo "$(CYAN)====================================$(RESET)"
	@echo ""
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(YELLOW)%-20s$(RESET) %s\n", $$1, $$2}' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(BLUE)–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:$(RESET)"
	@echo "  make setup           # –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make run-ptb         # –ó–∞–ø—É—Å–∫ python-telegram-bot –≤–∞—Ä–∏–∞–Ω—Ç–∞"
	@echo "  make run-aiogram     # –ó–∞–ø—É—Å–∫ aiogram –≤–∞—Ä–∏–∞–Ω—Ç–∞"
	@echo "  make lint            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"

setup: install copy-env ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env)
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª$(RESET)"

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ Poetry –∏–ª–∏ pip
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(RESET)"
ifdef POETRY
	@echo "$(BLUE)–ò—Å–ø–æ–ª—å–∑—É–µ–º Poetry...$(RESET)"
	$(POETRY) install
else
	@echo "$(BLUE)Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º pip...$(RESET)"
	$(PYTHON) -m pip install -r requirements.txt
endif
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(RESET)"

install-dev: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(RESET)"
	$(POETRY) install --only=dev
	@echo "$(GREEN)‚úÖ Dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(RESET)"

copy-env: ## –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å .env.sample –≤ .env (–µ—Å–ª–∏ .env –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
	@if [ ! -f .env ]; then \
		echo "$(BLUE)üìã –ö–æ–ø–∏—Ä—É–µ–º .env.sample –≤ .env...$(RESET)"; \
		cp .env.sample .env; \
		echo "$(YELLOW)‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env –∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π BOT_TOKEN!$(RESET)"; \
	else \
		echo "$(GREEN)‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç$(RESET)"; \
	fi

lint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä—ã (ruff)
	@echo "$(BLUE)üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ª–∏–Ω—Ç–µ—Ä—ã...$(RESET)"
	$(POETRY_RUN) ruff check .
	@echo "$(GREEN)‚úÖ –õ–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω$(RESET)"

format: ## –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ (ruff format)
	@echo "$(BLUE)üé® –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–¥...$(RESET)"
	$(POETRY_RUN) ruff format .
	@echo "$(GREEN)‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(RESET)"

format-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...$(RESET)"
	$(POETRY_RUN) ruff format --check .
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(RESET)"

type-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã —Å mypy
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã...$(RESET)"
	$(POETRY_RUN) mypy ptb/ aiogram/
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(RESET)"

lint-fix: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ª–∏–Ω—Ç–µ—Ä–∞
	@echo "$(BLUE)üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã –ª–∏–Ω—Ç–µ—Ä–∞...$(RESET)"
	$(POETRY_RUN) ruff check --fix .
	@echo "$(GREEN)‚úÖ –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(RESET)"

check-all: lint format-check type-check ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ª–∏–Ω—Ç–∏–Ω–≥, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ç–∏–ø—ã)
	@echo "$(GREEN)‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(RESET)"

run-ptb: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ python-telegram-bot
	@echo "$(PURPLE)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º python-telegram-bot –±–æ—Ç–∞...$(RESET)"
	@if [ ! -f .env ]; then \
		echo "$(RED) –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make copy-env$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) ptb/main.py

run-aiogram: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ aiogram
	@echo "$(PURPLE)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º aiogram –±–æ—Ç–∞...$(RESET)"
	@if [ ! -f .env ]; then \
		echo "$(RED) –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make copy-env$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) aiogram/bot.py

run-realtime: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Å OpenAI Realtime API
	@echo "$(PURPLE)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å Realtime API...$(RESET)"
	@if [ ! -f .env ]; then \
		echo "$(RED) –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make copy-env$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "OPENAI_API_KEY=sk-" .env; then \
		echo "$(RED) OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env$(RESET)"; \
		echo "$(YELLOW)–î–æ–±–∞–≤—å—Ç–µ: OPENAI_API_KEY=sk-your_key_here$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "TG_BOT_TOKEN=" .env; then \
		echo "$(RED) TG_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env$(RESET)"; \
		echo "$(YELLOW)–î–æ–±–∞–≤—å—Ç–µ: TG_BOT_TOKEN=your_bot_token$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) -m src.app

run-dental: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –±–æ—Ç–∞ —Å Realtime API
	@echo "$(PURPLE)ü¶∑ –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞...$(RESET)"
	@if [ ! -f .env ]; then \
		echo "$(RED) –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make copy-env$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) dental_bot.py

stop-bot: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –±–æ—Ç
	@echo "$(RED)üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...$(RESET)"
	$(POETRY_RUN) stop_bot.py

admin: ## –û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω)
	@echo "$(BLUE)üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...$(RESET)"
	@open http://localhost:8080 || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

test-admin: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω API
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω API...$(RESET)"
	$(POETRY_RUN) test_admin_api.py

dev-ptb: copy-env run-ptb ## –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ python-telegram-bot (—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º .env)

dev-aiogram: copy-env run-aiogram ## –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ aiogram (—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º .env)

dev-realtime: copy-env run-realtime ## –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Realtime API –±–æ—Ç–∞ (—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º .env)

webhook-mode: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ webhook —Ä–µ–∂–∏–º–µ (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
	@echo "$(PURPLE)üåê –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ webhook —Ä–µ–∂–∏–º–µ...$(RESET)"
	@if [ -z "$$TG_WEBHOOK_URL" ]; then \
		echo "$(RED) TG_WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(RESET)"; \
		echo "$(YELLOW)–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export TG_WEBHOOK_URL=https://your-domain.com/webhook$(RESET)"; \
		exit 1; \
	fi
	TG_WEBHOOK_URL=$$TG_WEBHOOK_URL $(POETRY_RUN) $(PYTHON) -m src.app

test-realtime: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Realtime API
	@echo "$(BLUE)üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenAI Realtime API...$(RESET)"
	@if ! grep -q "OPENAI_API_KEY=sk-" .env; then \
		echo "$(RED) OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) test_realtime.py

test-reconnection: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WebSocket
	@echo "$(BLUE)üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WebSocket...$(RESET)"
	@if ! grep -q "OPENAI_API_KEY=sk-" .env; then \
		echo "$(RED) OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) test_reconnection.py

test-pool: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
	@echo "$(BLUE)üèä –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π...$(RESET)"
	@if ! grep -q "OPENAI_API_KEY=sk-" .env; then \
		echo "$(RED) OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) $(PYTHON) test_pool.py

test-doctors: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–∞—á–µ–π –∏–∑ YClients API
	@echo "$(BLUE)üë®‚Äç‚öïÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–∞—á–µ–π –∏–∑ YClients...$(RESET)"
	@if ! grep -q "YCLIENTS_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_COMPANY_ID=" .env; then \
		echo "$(RED) YCLIENTS_COMPANY_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) test_doctors_api.py

test-auth: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization
	@echo "$(BLUE)üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization...$(RESET)"
	$(POETRY_RUN) test_auth_header.py

test-cache: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π
	@echo "$(BLUE)üíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π...$(RESET)"
	@if ! grep -q "YCLIENTS_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_COMPANY_ID=" .env; then \
		echo "$(RED) YCLIENTS_COMPANY_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) test_doctors_cache.py

test-services-cache: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥
	@echo "$(BLUE)üí∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥...$(RESET)"
	@if ! grep -q "YCLIENTS_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_COMPANY_ID=" .env; then \
		echo "$(RED) YCLIENTS_COMPANY_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) test_services_cache.py

test-all-cache: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–µ—à–∏ (–≤—Ä–∞—á–∏ + —É—Å–ª—É–≥–∏)
	@echo "$(BLUE)üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–µ—à–∏...$(RESET)"
	@make test-cache
	@echo ""
	@make test-services-cache

test-yclients-adapter: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å YClients –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è Realtime API
	@echo "$(BLUE)üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º YClients –∞–¥–∞–ø—Ç–µ—Ä...$(RESET)"
	@if ! grep -q "YCLIENTS_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_USER_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_USER_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_COMPANY_ID=" .env; then \
		echo "$(RED) YCLIENTS_COMPANY_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	$(POETRY_RUN) test_yclients_adapter.py

test-booking: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ YClients
	@echo "$(BLUE)üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ YClients...$(RESET)"
	@echo "$(YELLOW)‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —Å–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ!$(RESET)"
	@if ! grep -q "YCLIENTS_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_USER_TOKEN=" .env; then \
		echo "$(RED) YCLIENTS_USER_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@if ! grep -q "YCLIENTS_COMPANY_ID=" .env; then \
		echo "$(RED) YCLIENTS_COMPANY_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(RESET)"; \
		exit 1; \
	fi
	@echo "from dental_bot import YClientsIntegration; import asyncio; result = asyncio.run(YClientsIntegration().book_appointment('–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤', '+79999999999', '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–ú–∞–≥–æ–º–µ–¥ –†–∞—Å—É–ª–æ–≤', '2025-09-13T16:00', '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å')); print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}')" | python3

test-tls-fix: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TLS –æ—à–∏–±–æ–∫ (–±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω)
	@echo "$(BLUE)üîí –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É TLS –æ—à–∏–±–æ–∫...$(RESET)"
	@echo "$(YELLOW)üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (AdminServer –Ω–∞ –ø–æ—Ä—Ç—É 8080)$(RESET)"
	$(POETRY_RUN) test_tls_fix.py

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∫—ç—à–∏
	@echo "$(BLUE)üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...$(RESET)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name ".mypy_cache" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name ".ruff_cache" -exec rm -rf {} + 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(RESET)"

show-env: ## –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –±–æ—Ç–∞
	@echo "$(BLUE)üîç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(RESET)"
	@if [ -f .env ]; then \
		echo "$(GREEN).env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω:$(RESET)"; \
		grep -v "^#" .env | grep -v "^$$" | while read line; do \
			key=$$(echo "$$line" | cut -d'=' -f1); \
			if [ "$$key" = "BOT_TOKEN" ]; then \
				echo "  $$key=***—Å–∫—Ä—ã—Ç–æ***"; \
			else \
				echo "  $$line"; \
			fi; \
		done; \
	else \
		echo "$(RED) .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω$(RESET)"; \
	fi

poetry-shell: ## –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Poetry shell
	@echo "$(BLUE)üêö –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º Poetry shell...$(RESET)"
	$(POETRY) shell

poetry-info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Poetry –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(BLUE)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:$(RESET)"
	$(POETRY) show --tree

deps-update: ## –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(RESET)"
	$(POETRY) update
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã$(RESET)"

deps-export: ## –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ requirements.txt
	@echo "$(BLUE)üìã –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(RESET)"
	$(POETRY) export -f requirements.txt --output requirements.txt --without-hashes
	$(POETRY) export -f requirements.txt --output requirements-dev.txt --with=dev --without-hashes
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ requirements.txt –∏ requirements-dev.txt$(RESET)"

# –ê–ª–∏–∞—Å—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
install-deps: install ## –ê–ª–∏–∞—Å –¥–ª—è install
run-python-telegram-bot: run-ptb ## –ê–ª–∏–∞—Å –¥–ª—è run-ptb
check: check-all ## –ê–ª–∏–∞—Å –¥–ª—è check-all

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞.
"""

import os
import signal
import subprocess
import sys
import time

def find_bot_processes():
    """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞."""
    try:
        # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã —Å dental_bot –≤ –∫–æ–º–∞–Ω–¥–µ
        result = subprocess.run(
            ['ps', 'aux'], 
            capture_output=True, 
            text=True, 
            check=True
        )
        
        bot_processes = []
        for line in result.stdout.split('\n'):
            if 'dental_bot.py' in line and 'grep' not in line and 'stop_bot.py' not in line:
                parts = line.split()
                if len(parts) >= 2:
                    pid = parts[1]
                    command = ' '.join(parts[10:])  # –ö–æ–º–∞–Ω–¥–∞
                    bot_processes.append({
                        'pid': int(pid),
                        'command': command
                    })
        
        return bot_processes
        
    except subprocess.CalledProcessError as e:
        print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return []

def remove_lock_file():
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏."""
    lock_file = "/tmp/dental_bot.lock"
    try:
        if os.path.exists(lock_file):
            os.remove(lock_file)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {lock_file}")
            return True
        else:
            print(f"‚ÑπÔ∏è –§–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {lock_file}")
            return False
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {e}")
        return False

def stop_process(pid, process_name, force=False):
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ PID."""
    try:
        if force:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
            os.kill(pid, signal.SIGKILL)
            print(f"üíÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å {pid} ({process_name})")
        else:
            # –ú—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
            os.kill(pid, signal.SIGTERM)
            print(f"üõë –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å—É {pid} ({process_name})")
            
        return True
        
    except ProcessLookupError:
        print(f"‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å {pid} —É–∂–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
        
    except PermissionError:
        print(f" –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}")
        return False
        
    except Exception as e:
        print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}: {e}")
        return False

def wait_for_process_to_stop(pid, timeout=10):
    """–ñ–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞."""
    for i in range(timeout):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –µ—â–µ –ø—Ä–æ—Ü–µ—Å—Å
            os.kill(pid, 0)  # –ù–µ —É–±–∏–≤–∞–µ—Ç, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
            time.sleep(1)
            print(f"‚è≥ –ñ–¥–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}... ({i+1}/{timeout})")
        except ProcessLookupError:
            print(f"–ü—Ä–æ—Ü–µ—Å—Å {pid} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
    
    return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üõë –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞
    print("üîç –ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞...")
    bot_processes = find_bot_processes()
    
    if not bot_processes:
        print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        # –í—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        remove_lock_file()
        return
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(bot_processes)} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞:")
    for i, process in enumerate(bot_processes, 1):
        print(f"  {i}. PID: {process['pid']} - {process['command']}")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã...")
    
    stopped_pids = []
    failed_pids = []
    
    for process in bot_processes:
        pid = process['pid']
        command = process['command']
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –º—è–≥–∫–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        if stop_process(pid, command, force=False):
            if wait_for_process_to_stop(pid, timeout=5):
                stopped_pids.append(pid)
            else:
                print(f"‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å {pid} –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è, –ø—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É...")
                if stop_process(pid, command, force=True):
                    if wait_for_process_to_stop(pid, timeout=3):
                        stopped_pids.append(pid)
                    else:
                        failed_pids.append(pid)
                else:
                    failed_pids.append(pid)
        else:
            failed_pids.append(pid)
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    print("\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...")
    remove_lock_file()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    if stopped_pids:
        print(f"–£—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {len(stopped_pids)}")
        for pid in stopped_pids:
            print(f"  - PID: {pid}")
    
    if failed_pids:
        print(f" –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {len(failed_pids)}")
        for pid in failed_pids:
            print(f"  - PID: {pid}")
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å sudo –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Ä—É—á–Ω—É—é:")
        for pid in failed_pids:
            print(f"  sudo kill -9 {pid}")
    
    if not failed_pids:
        print("üéâ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ")
    
    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("  python3 dental_bot.py")

if __name__ == "__main__":
    main()
